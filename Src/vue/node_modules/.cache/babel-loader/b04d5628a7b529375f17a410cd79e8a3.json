{"remainingRequest":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue","mtime":499162500000},{"path":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\babel.config.js","mtime":1687783068000},{"path":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\15462\\Desktop\\xiang-hua-master\\xiang-hua-master\\Src\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2RGVjb3JhdGlvbjMnLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICBjb25zdCBwb2ludFNpZGVMZW5ndGggPSA3OwogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnZGVjb3JhdGlvbi0zJywKICAgICAgc3ZnV0g6IFszMDAsIDM1XSwKICAgICAgc3ZnU2NhbGU6IFsxLCAxXSwKICAgICAgcm93TnVtOiAyLAogICAgICByb3dQb2ludHM6IDI1LAogICAgICBwb2ludFNpZGVMZW5ndGgsCiAgICAgIGhhbGZQb2ludFNpZGVMZW5ndGg6IHBvaW50U2lkZUxlbmd0aCAvIDIsCiAgICAgIHBvaW50czogW10sCiAgICAgIGRlZmF1bHRDb2xvcjogWycjN2FjYWVjJywgJ3RyYW5zcGFyZW50J10sCiAgICAgIG1lcmdlZENvbG9yOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb2xvcigpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlQ29sb3IKICAgICAgfSA9IHRoaXM7CiAgICAgIG1lcmdlQ29sb3IoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdCgpIHsKICAgICAgY29uc3QgewogICAgICAgIGNhbGNTVkdEYXRhCiAgICAgIH0gPSB0aGlzOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIGNhbGNTVkdEYXRhKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY2FsY1BvaW50c1Bvc2l0aW9uLAogICAgICAgIGNhbGNTY2FsZQogICAgICB9ID0gdGhpczsKICAgICAgY2FsY1BvaW50c1Bvc2l0aW9uKCk7CiAgICAgIGNhbGNTY2FsZSgpOwogICAgfSwKICAgIGNhbGNQb2ludHNQb3NpdGlvbigpIHsKICAgICAgY29uc3QgewogICAgICAgIHN2Z1dILAogICAgICAgIHJvd051bSwKICAgICAgICByb3dQb2ludHMKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IFt3LCBoXSA9IHN2Z1dIOwogICAgICBjb25zdCBob3Jpem9udGFsR2FwID0gdyAvIChyb3dQb2ludHMgKyAxKTsKICAgICAgY29uc3QgdmVydGljYWxHYXAgPSBoIC8gKHJvd051bSArIDEpOwogICAgICBsZXQgcG9pbnRzID0gbmV3IEFycmF5KHJvd051bSkuZmlsbCgwKS5tYXAoKGZvbywgaSkgPT4gbmV3IEFycmF5KHJvd1BvaW50cykuZmlsbCgwKS5tYXAoKGZvbywgaikgPT4gW2hvcml6b250YWxHYXAgKiAoaiArIDEpLCB2ZXJ0aWNhbEdhcCAqIChpICsgMSldKSk7CiAgICAgIHRoaXMucG9pbnRzID0gcG9pbnRzLnJlZHVjZSgoYWxsLCBpdGVtKSA9PiBbLi4uYWxsLCAuLi5pdGVtXSwgW10pOwogICAgfSwKICAgIGNhbGNTY2FsZSgpIHsKICAgICAgY29uc3QgewogICAgICAgIHdpZHRoLAogICAgICAgIGhlaWdodCwKICAgICAgICBzdmdXSAogICAgICB9ID0gdGhpczsKICAgICAgY29uc3QgW3csIGhdID0gc3ZnV0g7CiAgICAgIHRoaXMuc3ZnU2NhbGUgPSBbd2lkdGggLyB3LCBoZWlnaHQgLyBoXTsKICAgIH0sCiAgICBvblJlc2l6ZSgpIHsKICAgICAgY29uc3QgewogICAgICAgIGNhbGNTVkdEYXRhCiAgICAgIH0gPSB0aGlzOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIG1lcmdlQ29sb3IoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjb2xvciwKICAgICAgICBkZWZhdWx0Q29sb3IKICAgICAgfSA9IHRoaXM7CiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBjb25zdCB7CiAgICAgIG1lcmdlQ29sb3IKICAgIH0gPSB0aGlzOwogICAgbWVyZ2VDb2xvcigpOwogIH0KfTs="},{"version":3,"mappings":";AA8BA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IAEA;MACAC;MAEAC;MAEAC;MAEAC;MACAC;MAEAC;MACAC;MAEAC;MAEAC;MAEAC;IACA;EACA;EACAC;IACAd;MACA;QAAAe;MAAA;MAEAA;IACA;EACA;EACAC;IACAC;MACA;QAAAC;MAAA;MAEAA;IACA;IACAA;MACA;QAAAC;QAAAC;MAAA;MAEAD;MAEAC;IACA;IACAD;MACA;QAAAd;QAAAE;QAAAC;MAAA;MAEA;MAEA;MACA;MAEA,uDACA,8CACAa,+CACA;MAEA;IACA;IACAD;MACA;QAAAE;QAAAC;QAAAlB;MAAA;MAEA;MAEA;IACA;IACAmB;MACA;QAAAN;MAAA;MAEAA;IACA;IACAH;MACA;QAAAf;QAAAY;MAAA;MAEA;IACA;EACA;EACAa;IACA;MAAAV;IAAA;IAEAA;EACA;AACA","names":["name","mixins","props","color","type","default","data","ref","svgWH","svgScale","rowNum","rowPoints","pointSideLength","halfPointSideLength","points","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","calcPointsPosition","calcScale","horizontalGap","width","height","onResize","mounted"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration3/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-3\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n\n      <template\n        v-for=\"(point, i) in points\"\n      >\n        <rect\n          :key=\"i\"\n          :fill=\"mergedColor[0]\"\n          :x=\"point[0] - halfPointSideLength\"\n          :y=\"point[1] - halfPointSideLength\"\n          :width=\"pointSideLength\"\n          :height=\"pointSideLength\"\n        >\n          <animate\n            v-if=\"Math.random() > 0.6\"\n            attributeName=\"fill\"\n            :values=\"`${mergedColor.join(';')}`\"\n            :dur=\"Math.random() + 1 + 's'\"\n            :begin=\"Math.random() * 2\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </template>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration3',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    const pointSideLength = 7\n\n    return {\n      ref: 'decoration-3',\n\n      svgWH: [300, 35],\n\n      svgScale: [1, 1],\n\n      rowNum: 2,\n      rowPoints: 25,\n\n      pointSideLength,\n      halfPointSideLength: pointSideLength / 2,\n\n      points: [],\n\n      defaultColor: ['#7acaec', 'transparent'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { calcPointsPosition, calcScale } = this\n\n      calcPointsPosition()\n\n      calcScale()\n    },\n    calcPointsPosition () {\n      const { svgWH, rowNum, rowPoints } = this\n\n      const [w, h] = svgWH\n\n      const horizontalGap = w / (rowPoints + 1)\n      const verticalGap = h / (rowNum + 1)\n\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\n        new Array(rowPoints).fill(0).map((foo, j) => [\n          horizontalGap * (j + 1), verticalGap * (i + 1)\n        ]))\n\n      this.points = points.reduce((all, item) => [...all, ...item], [])\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}